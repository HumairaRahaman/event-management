<template>
  <div class="h-full">
    <div class="flex justify-between h-auto">
      <div class="basis-[90%]">
        <div class="bg-green-50 px-3 mt-3 py-1 h-auto flex items-center rounded-lg">
          <h1 class="text-green-700 font-bold text-4xl mx-auto">Event Name</h1>
        </div>
        <div class="h-auto py-6 w-3/4 mb-6 mt-24 m-auto">
          <form @submit.prevent="submit">
            <div class="grid md:grid-cols-2 md:gap-6">
              <div>
                <label
                  for="countries"
                  class="block mb-2 text-sm text-gray-900 dark:text-gray-400"
                  >Registation Type</label
                >
                <input
                  type="radio"
                  id="student"
                  name="student"
                  v-model="type"
                  value="student"
                  class="mr-2"
                />
                <label for="student" class="pr-8">Student</label>

                <input
                  type="radio"
                  id="earner"
                  name="earner"
                  v-model="type"
                  value="earner"
                  class="mr-2"
                />
                <label for="earner">Earner</label>
              </div>
            </div>
            <div class="mt-5">
              <p>Fill up your Informatioon</p>
            </div>
            <div class="relative z-0 mb-6 w-full group">
              <input
                v-model="name"
                type="text"
                name="floating_name"
                id="floating_name"
                class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer"
                placeholder=" "
                required=""
              />
              <label
                for="floating_name"
                class="peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6"
                >Full Name</label
              >
            </div>
            <div class="relative z-0 mb-6 w-full group">
              <input
                v-model="email"
                type="email"
                name="floating_email"
                id="floating_email"
                class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer"
                placeholder=" "
                required=""
              />
              <label
                for="floating_email"
                class="peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6"
                >Email address</label
              >
            </div>

            <div class="grid md:grid-cols-2 mt-4 md:gap-6">
              <div class="relative z-0 mb-6 w-full group">
                <input
                  v-model="batch"
                  type="text"
                  name="floating_batch"
                  id="floating_batch"
                  class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer"
                  placeholder=" "
                  required=""
                />
                <label
                  for="floating_batch"
                  class="peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6"
                  >Batch</label
                >
              </div>
              <div class="relative z-0 mb-6 w-full group">
                <input
                  v-model="cadetName"
                  type="number"
                  name="floating_cadetNumber"
                  id="floating_cadetNumber"
                  class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer"
                  placeholder=" "
                  required=""
                />
                <label
                  for="floating_cadetNumber"
                  class="peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6"
                  >Cadet Number</label
                >
              </div>
            </div>
            <div class="grid md:grid-cols-2 md:gap-6">
              <div class="relative z-0 mb-6 w-full group">
                <input
                  v-model="phoneNumber"
                  type="tel"
                  pattern="[0-9]{3}-[0-9]{3}-[0-9]{4}"
                  name="floating_phone"
                  id="floating_phone"
                  class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer"
                  placeholder=" "
                  required=""
                />
                <label
                  for="floating_phone"
                  class="peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6"
                  >Phone number</label
                >
              </div>
              <div class="relative z-0 mb-6 w-full group">
                <input
                  v-model="profession"
                  type="text"
                  name="floating_profession"
                  id="floating_profession"
                  class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer"
                  placeholder=" "
                  required=""
                />
                <label
                  for="floating_profession"
                  class="peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6"
                  >Profession</label
                >
              </div>
            </div>
            <div class="grid md:grid-cols-2 md:gap-6">
              <div>
                <label
                  for="countries"
                  class="block mb-2 text-sm text-gray-900 dark:text-gray-400"
                  >Marital Status</label
                >
                <input
                  type="radio"
                  id="singal"
                  name="Mstatus"
                  v-model="status"
                  value="singal"
                  class="mr-2"
                />
                <label for="singal" class="pr-8">Singal</label>

                <input
                  type="radio"
                  id="married"
                  name="Mstatus"
                  v-model="status"
                  value="married"
                  class="mr-2"
                />
                <label for="married">Married</label>
              </div>
              <div v-if="status === 'married'" class="relative z-0 mt-6 w-full group">
                <input
                  v-model="spouseName"
                  type="text"
                  name="floating_spouseName"
                  id="floating_spouseName"
                  class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer"
                  placeholder=" "
                  required=""
                />
                <label
                  for="floating_spouseName"
                  class="peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6"
                  >Spouse Name</label
                >
              </div>
            </div>
            <div v-if="status === 'married'" class="mt-4">
              <div v-for="(item, index) in form" :key="item">
                <div class="flex flex-wrap w-full">
                  <div class="w-2/5">
                    <div class="relative z-0 mt-6 w-full group pr-4">
                      <input
                        v-model="item.name"
                        type="text"
                        name="kidName"
                        id="kidName"
                        class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer"
                        placeholder=" "
                        required=""
                      />
                      <label
                        for="kidName"
                        class="peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6"
                        >Kid name</label
                      >
                    </div>
                  </div>
                  <div class="w-2/5">
                    <div class="relative z-0 mt-6 w-full group pr-4">
                      <input
                        v-model="item.age"
                        type="text"
                        name="kidAge"
                        id="kidAge"
                        class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer"
                        placeholder=" "
                        required=""
                      />
                      <label
                        for="kidAge"
                        class="peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6"
                        >Kid age</label
                      >
                    </div>
                  </div>
                  <div class="w-1/5 space-x-5 flex items-end">
                    <button
                      type="button"
                      class="bg-red-400 py-2 px-4 text-white"
                      @click="removeRow(index)"
                    >
                      delate</button
                    >&nbsp;
                    <button @click="addRow" class="bg-blue-400 py-2 px-4 text-white">
                      Add more
                    </button>
                  </div>
                </div>
              </div>
            </div>

            <!-- Driver -->

            <div class="mt-4">
              <div v-for="(item, index) in driver" :key="item">
                <div class="flex flex-wrap w-full">
                  <div class="w-2/5">
                    <div class="relative z-0 mt-6 w-full group pr-4">
                      <input
                        v-model="item.name"
                        type="text"
                        name="DriverName"
                        id="DriverName"
                        class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer"
                        placeholder=" "
                        required=""
                      />
                      <label
                        for="DriverName"
                        class="peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6"
                        >Driver Name</label
                      >
                    </div>
                  </div>
                  <div class="w-1/5 space-x-5 flex items-end">
                    <button
                      type="button"
                      class="bg-red-400 py-2 px-4 text-white"
                      @click="DriremoveRow(index)"
                    >
                      delate</button
                    >&nbsp;
                    <button @click="DriaddRow" class="bg-blue-400 py-2 px-4 text-white">
                      Add more
                    </button>
                  </div>
                </div>
              </div>
            </div>

            <!-- Maid -->

            <div class="mt-4">
              <div v-for="(item, index) in maid" :key="item">
                <div class="flex flex-wrap w-full">
                  <div class="w-2/5">
                    <div class="relative z-0 mt-6 w-full group pr-4">
                      <input
                        v-model="item.name"
                        type="text"
                        name="MaidName"
                        id="MaidName"
                        class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer"
                        placeholder=" "
                        required=""
                      />
                      <label
                        for="MaidName"
                        class="peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6"
                        >Maid Name</label
                      >
                    </div>
                  </div>
                  <div class="w-1/5 space-x-5 flex items-end">
                    <button
                      type="button"
                      class="bg-red-400 py-2 px-4 text-white"
                      @click="MaidremoveRow(index)"
                    >
                      delate</button
                    >&nbsp;
                    <button @click="MaidaddRow" class="bg-blue-400 py-2 px-4 text-white">
                      Add more
                    </button>
                  </div>
                </div>
              </div>
            </div>

            <!-- Souvenir -->
            <div class="mt-4">
              <div v-for="(item, index) in souvenir" :key="item">
                <div class="flex flex-wrap w-full">
                  <div class="w-2/5">
                    <div class="relative z-0 mt-6 w-full group pr-4">
                      <input
                        v-model="item.name"
                        type="text"
                        name="SouvenirName"
                        id="SouvenirName"
                        class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer"
                        placeholder=" "
                        required=""
                      />
                      <label
                        for="SouvenirName"
                        class="peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6"
                        >Souvenir Name</label
                      >
                    </div>
                  </div>
                  <div class="w-1/5 space-x-5 flex items-end">
                    <button
                      type="button"
                      class="bg-red-400 py-2 px-4 text-white"
                      @click="SouvenirremoveRow(index)"
                    >
                      delate</button
                    >&nbsp;
                    <button
                      @click="SouveniraddRow"
                      class="bg-blue-400 py-2 px-4 text-white"
                    >
                      Add more
                    </button>
                  </div>
                </div>
              </div>
            </div>

            <!-- Guest -->

            <div class="mt-4">
              <div v-for="(item, index) in guest" :key="item">
                <div class="flex flex-wrap w-full">
                  <div class="w-2/5">
                    <div class="relative z-0 mt-6 w-full group pr-4">
                      <input
                        v-model="item.name"
                        type="text"
                        name="GuestName"
                        id="GuestName"
                        class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer"
                        placeholder=" "
                        required=""
                      />
                      <label
                        for="GuestName"
                        class="peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6"
                        >Guest Name</label
                      >
                    </div>
                  </div>
                  <div class="w-1/5 space-x-5 flex items-end">
                    <button
                      type="button"
                      class="bg-red-400 py-2 px-4 text-white"
                      @click="GuestremoveRow(index)"
                    >
                      delate</button
                    >&nbsp;
                    <button @click="GuestaddRow" class="bg-blue-400 py-2 px-4 text-white">
                      Add more
                    </button>
                  </div>
                </div>
              </div>
            </div>

            <button
              @click="submit"
              class="mt-6 text-white bg-indigo-700 hover:bg-indigo-600 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
            >
              Submit
            </button>
          </form>
        </div>
      </div>
    </div>
    <div>quantity {{ drivarquan }}</div>
    <div>totl fee {{ driverfee }}</div>
    <!-- <show-data></show-data> -->

    <!-- data show the table -->
    <div class="mx-56 my-12">
      <div>
        <p>Check Your Invoice</p>
      </div>
      <div class="overflow-x-auto bg-slate-400 relative">
        <table
          class="w-full text-sm text-left bg-slate-500 text-gray-500 dark:text-gray-400"
        >
          <thead
            class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400"
          >
            <tr>
              <th scope="col" class="py-3 px-6">Participant</th>
              <th scope="col" class="py-3 px-6">Qty</th>
              <th scope="col" class="py-3 px-6">Registration Fee</th>
              <th scope="col" class="py-3 px-6">Total</th>
            </tr>
          </thead>
          <tbody>
            <tr class="bg-white border-b dark:bg-gray-800 dark:border-gray-700">
              <th
                scope="row"
                class="py-4 px-6 font-medium text-gray-900 whitespace-nowrap dark:text-white"
              >
                Member
              </th>
              <td class="py-4 px-6">1</td>
              <td class="py-4 px-6">5000</td>
              <td class="py-4 px-6">5000</td>
            </tr>
            <tr class="bg-white border-b dark:bg-gray-800 dark:border-gray-700">
              <th
                scope="row"
                class="py-4 px-6 font-medium text-gray-900 whitespace-nowrap dark:text-white"
              >
                Spouse
              </th>
              <td class="py-4 px-6">1</td>
              <td class="py-4 px-6">2500</td>
              <td class="py-4 px-6">2500</td>
            </tr>
            <tr class="bg-white border-b dark:bg-gray-800 dark:border-gray-700">
              <th
                scope="row"
                class="py-4 px-6 font-medium text-gray-900 whitespace-nowrap dark:text-white"
              >
                Kids (Below 5)
              </th>
              <td class="py-4 px-6">1</td>
              <td class="py-4 px-6">0</td>
              <td class="py-4 px-6">0</td>
            </tr>
            <tr class="bg-white border-b dark:bg-gray-800 dark:border-gray-700">
              <th
                scope="row"
                class="py-4 px-6 font-medium text-gray-900 whitespace-nowrap dark:text-white"
              >
                Kids (Above 5)
              </th>
              <td class="py-4 px-6">2</td>
              <td class="py-4 px-6">1000</td>
              <td class="py-4 px-6">2000</td>
            </tr>
            <tr class="bg-white border-b dark:bg-gray-800 dark:border-gray-700">
              <th
                scope="row"
                class="py-4 px-6 font-medium text-gray-900 whitespace-nowrap dark:text-white"
              >
                Kid (Above 18)
              </th>
              <td class="py-4 px-6">0</td>
              <td class="py-4 px-6">2500</td>
              <td class="py-4 px-6">0</td>
            </tr>
            <tr class="bg-white border-b dark:bg-gray-800 dark:border-gray-700">
              <th
                scope="row"
                class="py-4 px-6 font-medium text-gray-900 whitespace-nowrap dark:text-white"
              >
                Driver
              </th>
              <td class="py-4 px-6">1</td>
              <td class="py-4 px-6">1500</td>
              <td class="py-4 px-6">1500</td>
            </tr>
            <tr class="bg-white border-b dark:bg-gray-800 dark:border-gray-700">
              <th
                scope="row"
                class="py-4 px-6 font-medium text-gray-900 whitespace-nowrap dark:text-white"
              >
                Maid
              </th>
              <td class="py-4 px-6">1</td>
              <td class="py-4 px-6">1500</td>
              <td class="py-4 px-6">1500</td>
            </tr>
            <tr class="bg-white border-b dark:bg-gray-800 dark:border-gray-700">
              <th
                scope="row"
                class="py-4 px-6 font-medium text-gray-900 whitespace-nowrap dark:text-white"
              >
                Guest
              </th>
              <td class="py-4 px-6">2</td>
              <td class="py-4 px-6">5000</td>
              <td class="py-4 px-6">10000</td>
            </tr>
            <tr class="bg-white border-b dark:bg-gray-800 dark:border-gray-700">
              <th
                scope="row"
                class="py-4 px-6 font-medium text-gray-900 whitespace-nowrap dark:text-white"
              >
                Total
              </th>
              <td class="py-4 px-6">9</td>
              <td class="py-4 px-6"></td>
              <td class="py-4 px-6">22500</td>
            </tr>
          </tbody>
        </table>
      </div>
      <div class="mt-6 block space-y-4 md:flex md:space-y-0 md:space-x-4 root">
        <button
          @click="modalOpen = true"
          type="submit"
          class="text-white bg-green-700 hover:bg-indigo-600 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
        >
          Pay Now
        </button>

        <teleport to=".modals-container">
          <div class="modal" v-if="modalOpen">
            <Detail
              @close="modalOpen = false"
              title="Congrstulstion, Your Registation is complete!"
              msg="Thank You"
            ></Detail>
          </div>
        </teleport>
      </div>
    </div>
  </div>
</template>

<script>
import { ref } from "vue";
import ShowData from "./ShowData.vue";
import { reactive, ref } from "vue";

export default {
  name: "Register",
  components: {
    ShowData,
  },
  setup() {
    let name = ref("");
    let status = ref("");
    let type = ref("");
    const modalOpen = ref(false);
    let maid = reactive([{ name: "" }]);
    let souvenir = reactive([{ name: "" }]);
    let guest = reactive([{ name: "" }]);
    let driver = reactive([{ name: "" }]);
    const form = reactive([{ name: "", age: 0 }]);
    let drivarquan = ref(0);
    let driverfee = ref(0);

    const addRow = () => {
      form.push({ name: "", age: 0 });
    };

    const removeRow = (index) => {
      if (form.length > 1) {
        form.splice(index, 1);
      }
    };

    // driver
    const DriaddRow = () => {
      driver.push({ name: "" });
    };

    const DriremoveRow = (index) => {
      if (driver.length > 0) {
        driver.splice(index, 1);
      }
    };

    // maid

    const MaidaddRow = () => {
      maid.push({ name: "" });
    };

    const MaidremoveRow = (index) => {
      if (maid.length > 0) {
        maid.splice(index, 1);
      }
    };
    // souvenir
    const SouveniraddRow = () => {
      souvenir.push({ name: "" });
    };

    const SouvenirremoveRow = (index) => {
      if (souvenir.length > 0) {
        souvenir.splice(index, 1);
      }
    };
    // Guest
    const GuestaddRow = () => {
      guest.push({ name: "" });
    };

    const GuestremoveRow = (index) => {
      if (guest.length > 0) {
        guest.splice(index, 1);
      }
    };

    const submit = () => {
      drivarquan.value = Object.keys(driver).length;
      driverfee.value = 1500 * drivarquan.value;
    };

    // const saveItem = () =>{
    //   // axios
    //   axios.post('items',form).then(res=>{
    //     console.log(res);
    //   })
    // }

    return {
      status,
      type,
      form,
      driver,
      drivarquan,
      driverfee,
      maid,
      souvenir,
      guest,
      addRow,
      removeRow,
      DriaddRow,
      DriremoveRow,
      MaidaddRow,
      MaidremoveRow,
      SouveniraddRow,
      SouvenirremoveRow,
      GuestaddRow,
      GuestremoveRow,
      submit,
    };
  },
};
</script>
<style scoped>
.modal {
  background: rgba(0, 0, 0, 0.1);
  padding: 10px;
  position: absolute;
  width: 100%;
  height: 100%;
  top: 90%;
  left: 0;
  z-index: 1;
  display: flex;
  justify-content: center;
  align-items: center;
}
</style>
